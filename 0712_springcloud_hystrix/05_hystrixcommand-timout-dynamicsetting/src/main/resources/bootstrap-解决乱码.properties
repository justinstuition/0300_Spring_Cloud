
## 方式一： 来自官方文档的 Configuration
## 其中 "TestHystrixCommand" 是 commandKey 的值
## 如果不指定 commandKey 的值，默认是自定义 HystrixCommand 的类的类名
## 程序中会根据 commandKey 检查缓存，所以 commandKey 最好独一无二
hystrix.command.TestHystrixCommand.execution.isolation.thread.timeoutInMilliseconds=100

## 方式二： 自定义属性
hystrix.command.timeout=100



## 简述：
## 1. 上面两个属性修改的是 HystrixCommandProperties 类中 executionTimeoutInMilliseconds 属性的值
## 2. HystrixPropertiesFactory # getCommandProperties 方法会根据 commandKey 查询缓存得到 HystrixCommandProperties
## 3. 方式一远程修改后，根据调试情况，应该是修改了缓存中 HystrixCommandProperties 对象的 executionTimeoutInMilliseconds 的值
##    方式二远程修改后，没有修改缓存中 executionTimeoutInMilliseconds 的值，根据 commandKey 得到的还是之前的 HystrixCommandProperties，
##    解决办法是修改 timeout 的同时，指定一个新的 commandKey，这样每次都会创建一个新的 HystrixCommandProperties 对象，
##    而不是从缓存中取。